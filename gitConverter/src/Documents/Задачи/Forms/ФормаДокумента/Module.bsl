#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.Дата = ТекущаяДатаСеанса();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	РекурсивноПересчитатьЗадачи(ТекущийОбъект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИсполнительПриИзменении(Элемент)
	
	Объект.ЗадачаПредшественник = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ДлительностьПриИзменении(Элемент)
	РасчитатьДаты();
КонецПроцедуры

&НаКлиенте
Процедура ФактПриИзменении(Элемент)
	
	Если Объект.Факт > Объект.Длительность Тогда
	
		Объект.Длительность = Объект.Факт;
	
	КонецЕсли;
	
	РасчитатьДаты();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗадачаПредшественникПриИзменении(Элемент)
	РасчитатьДаты();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура РасчитатьДаты()
	
	Общий.РасчитатьДаты(Объект.ДатаНачала, Объект.ДатаОкончания, Объект.Длительность, Объект.ЗадачаПредшественник)
	
КонецПроцедуры

Процедура РекурсивноПересчитатьЗадачи(ТекущаяЗадача)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Задачи.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.Задачи КАК Задачи
		|ГДЕ
		|	Задачи.ЗадачаПредшественник = &ЗадачаПредшественник";
	
	Запрос.УстановитьПараметр("ЗадачаПредшественник", ТекущаяЗадача);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ЗадачаОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		Общий.РасчитатьДаты(ЗадачаОбъект.ДатаНачала, ЗадачаОбъект.ДатаОкончания, ЗадачаОбъект.Длительность, ЗадачаОбъект.ЗадачаПредшественник);
		
		ЗадачаОбъект.Записать();
		
		РекурсивноПересчитатьЗадачи(ЗадачаОбъект.Ссылка);
	КонецЦикла;
	
КонецПроцедуры



#КонецОбласти